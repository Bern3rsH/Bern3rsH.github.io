<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://Bern3rsH.github.io</id>
    <title>Bern3rsH&apos;s Fantasy World</title>
    <updated>2020-02-05T17:47:59.761Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://Bern3rsH.github.io"/>
    <link rel="self" href="https://Bern3rsH.github.io/atom.xml"/>
    <subtitle>“如果天空总是黑暗，那就摸黑生存；如果发出声音是危险的，那就保持沉默；如果自觉无力发光，那就别去照亮别人。但是，不要习惯了黑暗就为黑暗辩护；不要为自己的苟且而得意洋洋；不要嘲讽那些比自己更勇敢、更有热量的人们。可以卑微如尘土，不可扭曲如蛆虫。”</subtitle>
    <logo>https://Bern3rsH.github.io/images/avatar.png</logo>
    <icon>https://Bern3rsH.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Bern3rsH&apos;s Fantasy World</rights>
    <entry>
        <title type="html"><![CDATA[我的数字生活「流」实践]]></title>
        <id>https://Bern3rsH.github.io/post/wo-de-shu-zi-sheng-huo-liu-shi-jian</id>
        <link href="https://Bern3rsH.github.io/post/wo-de-shu-zi-sheng-huo-liu-shi-jian">
        </link>
        <updated>2019-01-03T17:33:51.000Z</updated>
        <content type="html"><![CDATA[<p>尝试想象下你的数字生活阅读的一天：</p>
<p>回微信消息的时候Fenng的小道消息又更新了一篇公众号，半小时过去了，不错，点个「好看」。</p>
<p>准备放下手机的时候，顺手刷个微博吧，哈哈哈，这个猫猫也太可爱了吧，又半小时过去了。</p>
<p>bilibili有发来消息，「Lex又发新的视频啦」，用爱发电，肯定很好玩再看一下……</p>
<p>就这样，手机玩了很久，正事又没干，有没有办法解决这种情况呢？有！这时候可能就要先介绍一个东西，叫RSS。</p>
<h1 id="rss与rsshub">RSS与RSSHub</h1>
<blockquote>
<p>RSS（简易信息聚合）是一种消息来源格式规范，用以聚合经常发布更新数据的网站，例如博客文章、新闻、音频或视频的网摘。</p>
</blockquote>
<p>这是维基百科对于RSS的解释。在现代数字生活中，RSS已经渐渐被人们淡忘了，当年最大的RSS阅读器Google Reader也早已经关闭。但是，仍然有很多人沉迷于这种自我掌控信息流并进行聚合阅读的方式，所以新的RSS阅读器和RSS有关的一些新工具也是层出不穷。</p>
<p>几天前，少数派上<a href="https://www.sspai.com/article/51956?series_id=70">如何用 RSS 实现个性化订阅 | 实用技巧</a>提到了<a href="https://docs.rsshub.app/">RSSHub</a>这个RSS烧录工具引起了我的兴趣。其实，很久以前我就用过一段时间的RSS，但是后来就放弃了。原因很简单，这也是RSS非常大的缺点：</p>
<ul>
<li>内容信息提供方需要提供RSS的源，就是一个URL，你提供给RSS阅读器，就可以定期更新你的信息流，但是如果他没有提供，那就束手无策了。</li>
</ul>
<p>所以，从以往Web2.0的时代，大家都在网页上浏览信息，看博客文章的时代到现在以各个平台的提供不同场景下的信息并尝试把你留在它的平台上的时代，比如微博、微信公众号，RSS就有很多情况不能胜任的了，所以我后来就放弃了RSS。</p>
<p>而那篇文章里介绍的<a href="https://docs.rsshub.app/">RSSHub</a>，一种RSS烧录工具，就是解决RSS那个缺点的关键，也是我对于我的数字生活阅读「流」构建的关键。</p>
<figure data-type="image" tabindex="1"><img src="https://Bern3rsH.github.io/post-images/1580924276828.png" alt="" loading="lazy"></figure>
<p>我们可以看到，「万物皆可RSS」是这个网站的的标语，而它也并没有吹牛，可以看到它目前支持的网站：</p>
<ul>
<li><strong>社交媒体：</strong> bilibili、微博、贴吧、即刻、微信、简书、知乎、豆瓣、Twitter、Youtube……</li>
<li><strong>编程：</strong> 掘金、Dockone、开发者头条、Github、V2EX、极客时间……</li>
<li><strong>直播：</strong> 哔哩哔哩直播、斗鱼、熊猫、虎牙</li>
<li><strong>音视频：</strong> 网易云音乐、腾讯视频、爱奇艺、X榴社区、优酷、电影天堂、AcFun、字幕组……</li>
<li><strong>图片：</strong> 妹子图、不羞涩、煎蛋……</li>
<li><strong>程序更新：</strong> MIUI、Firefox、腾讯云移动直播SDK、App Store……</li>
<li><strong>大学通知：</strong> 上海海事、北大、南航、中科院……</li>
<li><strong>传统媒体：</strong> 央视新闻、南方周末、BBC、纽约时报……</li>
<li><strong>预报预警：</strong> 停水、停电、中国气象台……</li>
<li><strong>购物：</strong> 什么值得买、玩物志……</li>
<li>……</li>
</ul>
<p><a href="https://docs.rsshub.app/">RSSHub</a>是一个开源项目，在<a href="https://github.com/DIYgod/RSSHub">Github</a>可以看到它的代码，而且支持的网站还在靠网友的力量不断更新中。可以看到已经非常多和全了，基本可以覆盖中国人民常用网站。上到各种娱乐生活App，下到大学通知、停水停电。</p>
<p>下面我以订阅bilibili的UP主<a href="https://space.bilibili.com/777536">Lex</a>的投稿为例，<a href="https://docs.rsshub.app/">RSSHub</a>如何使用，以及它可以达到怎样的效果。</p>
<p>第一步：这个是网站上提供的关于UP主投稿的介绍。</p>
<figure data-type="image" tabindex="2"><img src="https://Bern3rsH.github.io/post-images/1580924371470.png" alt="" loading="lazy"></figure>
<p>第二步：按照说明，打开<a href="https://space.bilibili.com/777536">Lex的bilibili主页</a>。从网址中拿到uid是777536。</p>
<figure data-type="image" tabindex="3"><img src="https://Bern3rsH.github.io/post-images/1580924399017.jpg" alt="" loading="lazy"></figure>
<p>第三步：选择一个RSS服务提供商，市面上有很多，比较常见的是<a href="https://feedly.com/">Feedly</a>、<a href="https://www.inoreader.com/">Inoreader</a>、<a href="https://newsblur.com/">NewsBlur</a>，他们的免费版本都差不多且足够使用，这里就不展开说了，我使用的是Inoreader免费版。将URL放入搜索栏，只要你格式正确，都会得到一个订阅源。这样，只要你订阅的Rss订阅源更新，都可以及时食用啦。接下来只要把你所有的信息源的URL录入就可以了。</p>
<figure data-type="image" tabindex="4"><img src="https://Bern3rsH.github.io/post-images/1580924449082.jpg" alt="" loading="lazy"></figure>
<p>第四步（可选）：为了达到统一且更好的的阅读体验，选择RSS阅读器。在macOS和iOS平台上，我都用的是<a href="http://reederapp.com/">Reeder3</a>。用我的Inoreader账号登陆上去之后，就可以看到我的RSS信息流，囊括了我几乎所有的数字生活。有公众号文章、有微博、有新闻、有博客、有豆瓣上的「深圳最近热门活动」等等，可以说，对于外部信息摄取，我只要打开这一个App就好了。</p>
<figure data-type="image" tabindex="5"><img src="https://Bern3rsH.github.io/post-images/1580924475675.jpg" alt="" loading="lazy"></figure>
<p>当我拥有了这么便捷的信息摄入的途径之后，有几个优点：</p>
<ul>
<li>减少了注意力的分散，更好划分时间。当我打开Reeder的时候，我的心理预期已经告诉我自己，我现在是处于娱乐时间，所以不会在工作和学习的过程中打开，造成效率低下。同时还可以通过时间记录App或者iOS自带的App使用时长来控制自己防沉迷。</li>
<li>将所有的信息归于一处，节约时间。我避免了打开多个不同App，只要在准备休息娱乐时，打开Reeder的Unread列表，扫一眼，感兴趣的就点开，不感兴趣的就跳过，非常高效。也避免了漏掉一些自己感兴趣的信息。</li>
<li>更加愿意读长文章，减少无意义的碎片阅读。前面也提到，在划分好时间后，我就可以预估我读完这个信息的时间，所以可以去读一些可能要做一些心理建设才会去读的长文章甚至是一些英文的长文章。</li>
</ul>
<p>可是，这样就够了吗？这也是好的工具给我带来的思考，在之前的阅读体验中，没有感觉有什么不好，但是用了更好的「器」之后，会倒逼你去想「道」，来配合你的「器」。所以这也是我的观点之一，折腾工具本身也会优化你的思维，好的工具可以带来好的更优秀的思维方式。</p>
<h1 id="数字生活阅读流的再思考">数字生活阅读「流」的再思考</h1>
<p>这样的阅读流程，虽然已经足够便利，但是肯定还是远远谈不上数字生活阅读「流」。拥有了这样的信息摄入的利器，也促使了我去想，在我的整个阅读体验上，还是有什么可以优化的。</p>
<ul>
<li>一些英文的文章，我还是需要查字典，最好还能有生词本。</li>
<li>在长文章的阅读上面，Reeder还是没有稍后读的App体验好。排版会乱。</li>
<li>在某些时间不适合读一些文章，没有办法完美划分时间。可能白天看到以后想要读，晚上就忘记了。</li>
</ul>
<p>针对这些问题，我选择了稍后读软件。市面上稍后读软件主要是<a href="https://getpocket.com/">Pocket</a>和<a href="https://www.instapaper.com/u">Instapaper</a>。我使用的是<a href="https://www.instapaper.com/u">Instapaper</a>的免费版，针对英文文章我会选择用我的iPad来读。这种场景非常适合分屏，左边点击单词，右边我的欧路词典就会自动帮我查词意并加入生词本。针对不会的单词，我准备尝试<a href="https://apps.ankiweb.net/">Anki</a>，之后可能会写一篇关于它的文章（hhh，刚开始写就学会挖坑了）。事实上，大部分长文章我都会选择在晚上回家以后用iPad读，iPad的大屏阅读体验还是Mac和iPhone都无法比拟的。</p>
<figure data-type="image" tabindex="6"><img src="https://Bern3rsH.github.io/post-images/1580924518863.jpg" alt="" loading="lazy"></figure>
<p>之后，在思考可能忘记读这件事上，我想到了我的任务管理App。我使用了我的<a href="https://culturedcode.com/things/">Thing3</a>的<a href="https://support.culturedcode.com/customer/portal/articles/2908262#create-powerful-workflows">Mail to Things</a>功能，配合<a href="https://ifttt.com/">IFTTT</a>，可以达到这样的效果：点击Reeder里的保存到Instapaper，IFTTT监测到Instapaper有新文章，向我的Things邮箱发送一则邮件，这样我的收件箱里面就会有这篇文章的标题，告诉我要去读这件事。听起来很绕，其实很简单，一键达到提醒我晚上要读这篇文章这个目的。</p>
<figure data-type="image" tabindex="7"><img src="https://Bern3rsH.github.io/post-images/1580924553106.jpg" alt="" loading="lazy"></figure>
<p>这样，我的整个数字生活阅读「流」就完整了，形成了闭环。经过几天的实践，我每天的阅读量和花在无意义阅读的时间少了很多，英文阅读水平也进步了。虽然看上去比较折腾，但是我个人认为还是值得的，折后带来的回报是一劳永逸的。</p>
<figure data-type="image" tabindex="8"><img src="https://Bern3rsH.github.io/post-images/1580924560278.png" alt="" loading="lazy"></figure>
<h1 id="后记">后记</h1>
<p>当然，这套方法也并不是「屠龙术」。RSS和RSSHub也有它自己的缺点，最大的可能就是脱离了原平台，你无法使用很多原平台才有的功能，比如微博的点赞、评论等等。当然，从Reeder去原网站进行交互，也很方便，只是失去了RSS的意义而已。当你在网上大部分时间处于接受信息方且注重效率和阅读体验的话，我还是很推荐我这的这一套数字生活阅读「流」。<br>
这是我刚搭的新博客的第一篇文章，也是类似数字生活的文章第一次写，所以文笔还比较稚嫩。博客主要可能会包含一些数字生活的探索、技术文章、可能勉强算做诗的玩意儿等等。这也是之前说过要多成为内容的创造者吧，新年Flag立起。如果你感兴趣我的博客，欢迎RSS订阅我（现在还不支持，等我捣鼓一下看怎么搞hhh）。</p>
]]></content>
    </entry>
</feed>